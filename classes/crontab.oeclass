## Move crontab files to recipe specific directory.
##
## If a file contains a crontab configuration, it is moved to a recipe specific
## directory. This is done to ensure that multiple recipes may have crontab
## files without them conflicting. See the image_crontab class for when it is
## combined to one crontab config file. Crontab is enabled using the use flag
## crontab.
##
## USE_<name>_crontab set when command is called
## CRONTAB_USER_<name> set crontab user
## CRONTAB_FILE_<name> set name of crontab file (default is <name> from USE flag)
## USE_crontab enable/disable crontab
## crontabdir set crontab install path (see conf/crontab.conf)
##
## If crontab is enabled 'crond' needs to be provided.
##
## Example:
##>·>·DISTRO_USE_crontab = "1"
##
##>·>·CRONTAB_USER_logrotate = "root"
##>·>·RECIPE_FLAGS += " logrotate_crontab"
##>·>·DEFAULT_USE_logrotate_crontab = "0 * * * *"
##
## @useflag crontab Set if you want crontab to be enabled

require conf/crontab.conf

CRONTAB_DEPENDS = " crond"
RDEPENDS_${PN}:>USE_crontab = "${CRONTAB_DEPENDS}"

do_install[postfuncs] += "do_install_crontab"
python do_install_crontab () {
    import os

    if not d.get('USE_crontab'):
	return

    options = ((d.get('RECIPE_FLAGS') or "").split() +
               (d.get('CLASS_FLAGS') or "").split())
    ddir = d.get('D')
    bb.note('ddir=%s'%ddir)
    crontabdir = d.get('crontabdir')
    crontabdir = '%s%s'%(ddir, crontabdir)
    bb.note('crontabdir=%s'%crontabdir)
    srcdir = d.get('SRCDIR')

    for option in options:

	if not option.endswith('_crontab'):
	    continue

	when = d.get('USE_'+option)
	if not when:
	    continue

	name = option[0:-len('_crontab')]

	crontab_file = d.get('CRONTAB_FILE_'+name)
	if not crontab_file:
	    crontab_file = os.path.join(srcdir, name + '.crontab')

	crontab_user = d.get('CRONTAB_USER_'+name) or 'root'

        out_filename = os.path.join(crontabdir, crontab_user +'.'+ name)

        bb.note('crontabdir=%s'%crontabdir)
	if not os.path.exists(crontabdir):
	    os.makedirs(crontabdir, mode=0755)

        with open(out_filename, 'w') as out_file:
	    with open(crontab_file) as in_file:
                for line in in_file.readlines():
                    out_file.write(when +' '+ line)
        os.chmod(out_filename, 0644)
}

# Local Variables:
# mode: python
# End:
